{"ast":null,"code":"var _jsxFileName = \"/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/components/DemoMode.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React from 'react';\n\n/**\n * Demo mode context and provider\n * Provides demo mode state and utilities throughout the application\n */\nimport { createContext, useContext, useEffect, useState } from 'react';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoModeContext = /*#__PURE__*/createContext({\n  isDemoMode: false,\n  demoUser: null\n});\n\n/**\n * Demo mode provider component\n * Detects demo mode and provides context to child components\n */\nexport const DemoModeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDemoMode, setIsDemoMode] = useState(false);\n  const [demoUser, setDemoUser] = useState(null);\n  useEffect(() => {\n    // Check if we're in demo mode based on environment variable or URL\n    const checkDemoMode = () => {\n      // Check for environment variable\n      const envDemoMode = process.env.REACT_APP_DEMO_MODE === 'true';\n\n      // Check URL for demo parameter\n      const urlParams = new URLSearchParams(window.location.search);\n      const urlDemoMode = urlParams.get('demo') === 'true';\n\n      // Check if domain is the demo domain\n      const demoHostnames = ['devops-dashboard.joshuamichaelhall.com', 'devops-dashboard.onrender.com', 'joshuamichaelhall.github.io'];\n      const isDemoDomain = demoHostnames.includes(window.location.hostname);\n\n      // Force demo mode for certain paths\n      const isDemoPath = window.location.pathname.includes('/dashboard');\n\n      // Set demo mode if any condition is true\n      const isDemo = envDemoMode || urlDemoMode || isDemoDomain || isDemoPath;\n      console.log('Demo mode enabled:', isDemo, {\n        envDemoMode,\n        urlDemoMode,\n        isDemoDomain,\n        isDemoPath\n      });\n      setIsDemoMode(isDemo);\n\n      // Set demo user for authenticated views\n      const demoUser = {\n        id: 'demo-user',\n        username: 'demo',\n        isDemoUser: true\n      };\n      localStorage.setItem('dashboard_user', JSON.stringify(demoUser));\n      setDemoUser(demoUser);\n    };\n    checkDemoMode();\n  }, []);\n\n  // Demo mode context value\n  const value = {\n    isDemoMode,\n    demoUser,\n    isDemoUser: user => user && user.isDemoUser\n  };\n  return /*#__PURE__*/_jsxDEV(DemoModeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n/**\n * Hook to use demo mode context\n */\n_s(DemoModeProvider, \"+ZTqFKtO6h3Mz8Wwx7efyXWcapk=\");\n_c = DemoModeProvider;\nexport const useDemoMode = () => {\n  _s2();\n  const context = useContext(DemoModeContext);\n  if (!context) {\n    throw new Error('useDemoMode must be used within a DemoModeProvider');\n  }\n  return context;\n};\n\n/**\n * Watermark component for demo mode\n */\n_s2(useDemoMode, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const DemoWatermark = () => {\n  _s3();\n  const {\n    isDemoMode\n  } = useDemoMode();\n  if (!isDemoMode) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-watermark\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"DEMO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: \"true\",\n      children: `\n        .demo-watermark {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          pointer-events: none;\n          z-index: 100;\n          user-select: none;\n        }\n        .demo-watermark span {\n          font-size: 20vw;\n          color: rgba(245, 54, 92, 0.05);\n          font-weight: bold;\n          transform: rotate(-45deg);\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s3(DemoWatermark, \"1V3Ud/nXZvIoi1zcF8xG5OwTyCs=\", false, function () {\n  return [useDemoMode];\n});\n_c2 = DemoWatermark;\nexport default {\n  DemoModeProvider,\n  useDemoMode,\n  DemoWatermark\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"DemoModeProvider\");\n$RefreshReg$(_c2, \"DemoWatermark\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","DemoModeContext","isDemoMode","demoUser","DemoModeProvider","children","_s","setIsDemoMode","setDemoUser","checkDemoMode","envDemoMode","process","env","REACT_APP_DEMO_MODE","urlParams","URLSearchParams","window","location","search","urlDemoMode","get","demoHostnames","isDemoDomain","includes","hostname","isDemoPath","pathname","isDemo","console","log","id","username","isDemoUser","localStorage","setItem","JSON","stringify","value","user","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDemoMode","_s2","context","Error","DemoWatermark","_s3","className","jsx","_c2","$RefreshReg$"],"sources":["/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/components/DemoMode.js"],"sourcesContent":["import React from 'react';\n\n/**\n * Demo mode context and provider\n * Provides demo mode state and utilities throughout the application\n */\nimport { createContext, useContext, useEffect, useState } from 'react';\n\n// Create context\nconst DemoModeContext = createContext({\n  isDemoMode: false,\n  demoUser: null\n});\n\n/**\n * Demo mode provider component\n * Detects demo mode and provides context to child components\n */\nexport const DemoModeProvider = ({ children }) => {\n  const [isDemoMode, setIsDemoMode] = useState(false);\n  const [demoUser, setDemoUser] = useState(null);\n  \n  useEffect(() => {\n    // Check if we're in demo mode based on environment variable or URL\n    const checkDemoMode = () => {\n      // Check for environment variable\n      const envDemoMode = process.env.REACT_APP_DEMO_MODE === 'true';\n      \n      // Check URL for demo parameter\n      const urlParams = new URLSearchParams(window.location.search);\n      const urlDemoMode = urlParams.get('demo') === 'true';\n      \n      // Check if domain is the demo domain\n      const demoHostnames = [\n        'devops-dashboard.joshuamichaelhall.com',\n        'devops-dashboard.onrender.com',\n        'joshuamichaelhall.github.io'\n      ];\n      const isDemoDomain = demoHostnames.includes(window.location.hostname);\n      \n      // Force demo mode for certain paths\n      const isDemoPath = window.location.pathname.includes('/dashboard');\n      \n      // Set demo mode if any condition is true\n      const isDemo = envDemoMode || urlDemoMode || isDemoDomain || isDemoPath;\n      console.log('Demo mode enabled:', isDemo, { envDemoMode, urlDemoMode, isDemoDomain, isDemoPath });\n      setIsDemoMode(isDemo);\n      \n      // Set demo user for authenticated views\n      const demoUser = {\n        id: 'demo-user',\n        username: 'demo',\n        isDemoUser: true\n      };\n      localStorage.setItem('dashboard_user', JSON.stringify(demoUser));\n      setDemoUser(demoUser);\n    };\n    \n    checkDemoMode();\n  }, []);\n  \n  // Demo mode context value\n  const value = {\n    isDemoMode,\n    demoUser,\n    isDemoUser: (user) => user && user.isDemoUser\n  };\n  \n  return (\n    <DemoModeContext.Provider value={value}>\n      {children}\n    </DemoModeContext.Provider>\n  );\n};\n\n/**\n * Hook to use demo mode context\n */\nexport const useDemoMode = () => {\n  const context = useContext(DemoModeContext);\n  if (!context) {\n    throw new Error('useDemoMode must be used within a DemoModeProvider');\n  }\n  return context;\n};\n\n/**\n * Watermark component for demo mode\n */\nexport const DemoWatermark = () => {\n  const { isDemoMode } = useDemoMode();\n  \n  if (!isDemoMode) return null;\n  \n  return (\n    <div className=\"demo-watermark\">\n      <span>DEMO</span>\n      \n      <style jsx=\"true\">{`\n        .demo-watermark {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          pointer-events: none;\n          z-index: 100;\n          user-select: none;\n        }\n        .demo-watermark span {\n          font-size: 20vw;\n          color: rgba(245, 54, 92, 0.05);\n          font-weight: bold;\n          transform: rotate(-45deg);\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default { DemoModeProvider, useDemoMode, DemoWatermark };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}