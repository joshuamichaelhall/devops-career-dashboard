{"ast":null,"code":"import React,{useState,useEffect}from'react';import{connectToClayApi,checkClayConnection}from'../services/clayApi';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ClayConnectForm=_ref=>{let{onSuccess}=_ref;const[apiKey,setApiKey]=useState('');const[isConnecting,setIsConnecting]=useState(false);const[error,setError]=useState('');const[connectionStatus,setConnectionStatus]=useState({connected:false,lastConnected:null});// Check connection status on mount\nuseEffect(()=>{const checkConnection=async()=>{try{const status=await checkClayConnection();setConnectionStatus(status);}catch(err){console.error('Error checking connection:',err);setConnectionStatus({connected:false});}};checkConnection();},[]);const handleConnect=async e=>{e.preventDefault();if(!apiKey.trim()){setError('API key is required');return;}try{setIsConnecting(true);setError('');const result=await connectToClayApi(apiKey);if(result.success){setConnectionStatus({connected:true,lastConnected:new Date().toISOString()});setApiKey('');if(onSuccess){onSuccess();}}else{setError(result.error||'Failed to connect to Clay CRM');}}catch(err){console.error('Error connecting to Clay:',err);setError('Failed to connect to Clay CRM. Please check your API key and try again.');}finally{setIsConnecting(false);}};const formatDate=dateString=>{if(!dateString)return'';const date=new Date(dateString);return new Intl.DateTimeFormat('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'}).format(date);};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-4 mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold mb-4\",children:\"Clay CRM Connection\"}),connectionStatus.connected?/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium\",children:\"\\uD83D\\uDFE2 Connected to Clay CRM\"}),connectionStatus.lastConnected&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm\",children:[\"Last connected: \",formatDate(connectionStatus.lastConnected)]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setConnectionStatus({connected:false}),className:\"mt-2 text-sm bg-white px-3 py-1 rounded border border-green-400 hover:bg-green-50\",children:\"Reconnect\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 text-red-700 p-3 rounded mb-4 text-sm\",children:error}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-4\",children:\"Connect your Clay CRM account to track your networking progress and relationships. You can find your API key in your Clay CRM account settings.\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleConnect,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Clay CRM API Key\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:apiKey,onChange:e=>setApiKey(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",placeholder:\"Enter your Clay CRM API key\",disabled:isConnecting})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",disabled:isConnecting,children:isConnecting?'Connecting...':'Connect Clay CRM'})})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-4\",children:[\"Don't have a Clay CRM account? \",/*#__PURE__*/_jsx(\"a\",{href:\"https://clay.earth\",className:\"text-blue-600 hover:underline\",target:\"_blank\",rel:\"noreferrer\",children:\"Sign up here\"})]})]})]});};export default ClayConnectForm;","map":{"version":3,"names":["React","useState","useEffect","connectToClayApi","checkClayConnection","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ClayConnectForm","_ref","onSuccess","apiKey","setApiKey","isConnecting","setIsConnecting","error","setError","connectionStatus","setConnectionStatus","connected","lastConnected","checkConnection","status","err","console","handleConnect","e","preventDefault","trim","result","success","Date","toISOString","formatDate","dateString","date","Intl","DateTimeFormat","year","month","day","hour","minute","format","className","children","onClick","onSubmit","type","value","onChange","target","placeholder","disabled","href","rel"],"sources":["/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/components/ClayConnectForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connectToClayApi, checkClayConnection } from '../services/clayApi';\n\nconst ClayConnectForm = ({ onSuccess }) => {\n  const [apiKey, setApiKey] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState('');\n  const [connectionStatus, setConnectionStatus] = useState({ connected: false, lastConnected: null });\n  \n  // Check connection status on mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      try {\n        const status = await checkClayConnection();\n        setConnectionStatus(status);\n      } catch (err) {\n        console.error('Error checking connection:', err);\n        setConnectionStatus({ connected: false });\n      }\n    };\n    \n    checkConnection();\n  }, []);\n  \n  const handleConnect = async (e) => {\n    e.preventDefault();\n    \n    if (!apiKey.trim()) {\n      setError('API key is required');\n      return;\n    }\n    \n    try {\n      setIsConnecting(true);\n      setError('');\n      \n      const result = await connectToClayApi(apiKey);\n      \n      if (result.success) {\n        setConnectionStatus({ connected: true, lastConnected: new Date().toISOString() });\n        setApiKey('');\n        if (onSuccess) {\n          onSuccess();\n        }\n      } else {\n        setError(result.error || 'Failed to connect to Clay CRM');\n      }\n    } catch (err) {\n      console.error('Error connecting to Clay:', err);\n      setError('Failed to connect to Clay CRM. Please check your API key and try again.');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  \n  const formatDate = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n  \n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4 mb-4\">\n      <h3 className=\"text-lg font-bold mb-4\">Clay CRM Connection</h3>\n      \n      {connectionStatus.connected ? (\n        <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\">\n          <p className=\"font-medium\">ðŸŸ¢ Connected to Clay CRM</p>\n          {connectionStatus.lastConnected && (\n            <p className=\"text-sm\">Last connected: {formatDate(connectionStatus.lastConnected)}</p>\n          )}\n          <button\n            onClick={() => setConnectionStatus({ connected: false })}\n            className=\"mt-2 text-sm bg-white px-3 py-1 rounded border border-green-400 hover:bg-green-50\"\n          >\n            Reconnect\n          </button>\n        </div>\n      ) : (\n        <>\n          {error && (\n            <div className=\"bg-red-100 text-red-700 p-3 rounded mb-4 text-sm\">\n              {error}\n            </div>\n          )}\n          \n          <p className=\"text-sm text-gray-600 mb-4\">\n            Connect your Clay CRM account to track your networking progress and relationships.\n            You can find your API key in your Clay CRM account settings.\n          </p>\n          \n          <form onSubmit={handleConnect}>\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Clay CRM API Key\n              </label>\n              <input\n                type=\"password\"\n                value={apiKey}\n                onChange={(e) => setApiKey(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Enter your Clay CRM API key\"\n                disabled={isConnecting}\n              />\n            </div>\n            \n            <div className=\"flex justify-end\">\n              <button\n                type=\"submit\"\n                className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                disabled={isConnecting}\n              >\n                {isConnecting ? 'Connecting...' : 'Connect Clay CRM'}\n              </button>\n            </div>\n          </form>\n          \n          <p className=\"text-xs text-gray-500 mt-4\">\n            Don't have a Clay CRM account? <a href=\"https://clay.earth\" className=\"text-blue-600 hover:underline\" target=\"_blank\" rel=\"noreferrer\">Sign up here</a>\n          </p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ClayConnectForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}