{"ast":null,"code":"import React,{useState}from'react';import{Plus,RefreshCw}from'lucide-react';import{useDashboard}from'../context/DashboardContext';import TaskItem from'./TaskItem';import AddTaskForm from'./AddTaskForm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TasksTracker=()=>{const{dashboardData,loading,refreshData}=useDashboard();const[showAddForm,setShowAddForm]=useState(false);const[activeFilter,setActiveFilter]=useState('all');if(loading||!dashboardData){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-md p-4 flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"})});}const{goals}=dashboardData;// Group tasks by status\nconst pendingTasks=goals.filter(task=>!task.completed);const completedTasks=goals.filter(task=>task.completed);// Filter tasks based on the active filter\nconst filterTasks=tasks=>{if(activeFilter==='all')return tasks;return tasks.filter(task=>task.category.toLowerCase()===activeFilter.toLowerCase());};const categories=['all','learning','project','networking','content creation','job search'];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold\",children:\"Tasks Tracker\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>refreshData(),className:\"p-2 bg-gray-100 rounded-full hover:bg-gray-200\",\"aria-label\":\"Refresh data\",children:/*#__PURE__*/_jsx(RefreshCw,{size:18})}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowAddForm(true),className:\"bg-blue-600 text-white px-3 py-2 rounded-md flex items-center\",children:[/*#__PURE__*/_jsx(Plus,{size:18,className:\"mr-1\"}),\" Add Task\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6 flex flex-wrap gap-2\",children:categories.map(category=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveFilter(category),className:\"px-3 py-1 rounded-full text-sm \".concat(activeFilter===category?'bg-blue-600 text-white':'bg-gray-100 text-gray-700 hover:bg-gray-200'),children:category.charAt(0).toUpperCase()+category.slice(1)},category))}),showAddForm&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(AddTaskForm,{onClose:()=>setShowAddForm(false)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold\",children:\"To Do\"}),/*#__PURE__*/_jsx(\"span\",{className:\"bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded\",children:filterTasks(pendingTasks).length})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-96 overflow-y-auto\",children:filterTasks(pendingTasks).length>0?filterTasks(pendingTasks).map(task=>/*#__PURE__*/_jsx(TaskItem,{task:task},task.content)):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 italic\",children:\"No pending tasks\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"span\",{className:\"bg-yellow-100 text-yellow-800 text-xs font-medium px-2.5 py-0.5 rounded\",children:\"0\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 italic\",children:\"No tasks in progress\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"span\",{className:\"bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded\",children:filterTasks(completedTasks).length})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-96 overflow-y-auto\",children:filterTasks(completedTasks).length>0?filterTasks(completedTasks).map(task=>/*#__PURE__*/_jsx(TaskItem,{task:task},task.content)):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 italic\",children:\"No completed tasks\"})})]})]})]});};export default TasksTracker;","map":{"version":3,"names":["React","useState","Plus","RefreshCw","useDashboard","TaskItem","AddTaskForm","jsx","_jsx","jsxs","_jsxs","TasksTracker","dashboardData","loading","refreshData","showAddForm","setShowAddForm","activeFilter","setActiveFilter","className","children","goals","pendingTasks","filter","task","completed","completedTasks","filterTasks","tasks","category","toLowerCase","categories","onClick","size","map","concat","charAt","toUpperCase","slice","onClose","length","content"],"sources":["/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/components/TasksTracker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Plus, RefreshCw } from 'lucide-react';\nimport { useDashboard } from '../context/DashboardContext';\nimport TaskItem from './TaskItem';\nimport AddTaskForm from './AddTaskForm';\n\nconst TasksTracker = () => {\n  const { dashboardData, loading, refreshData } = useDashboard();\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [activeFilter, setActiveFilter] = useState('all');\n\n  if (loading || !dashboardData) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-md p-4 flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  const { goals } = dashboardData;\n  \n  // Group tasks by status\n  const pendingTasks = goals.filter(task => !task.completed);\n  const completedTasks = goals.filter(task => task.completed);\n  \n  // Filter tasks based on the active filter\n  const filterTasks = (tasks) => {\n    if (activeFilter === 'all') return tasks;\n    return tasks.filter(task => task.category.toLowerCase() === activeFilter.toLowerCase());\n  };\n  \n  const categories = ['all', 'learning', 'project', 'networking', 'content creation', 'job search'];\n  \n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold\">Tasks Tracker</h2>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={() => refreshData()}\n            className=\"p-2 bg-gray-100 rounded-full hover:bg-gray-200\"\n            aria-label=\"Refresh data\"\n          >\n            <RefreshCw size={18} />\n          </button>\n          <button\n            onClick={() => setShowAddForm(true)}\n            className=\"bg-blue-600 text-white px-3 py-2 rounded-md flex items-center\"\n          >\n            <Plus size={18} className=\"mr-1\" /> Add Task\n          </button>\n        </div>\n      </div>\n      \n      {/* Category filter */}\n      <div className=\"mb-6 flex flex-wrap gap-2\">\n        {categories.map(category => (\n          <button\n            key={category}\n            onClick={() => setActiveFilter(category)}\n            className={`px-3 py-1 rounded-full text-sm ${\n              activeFilter === category\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            }`}\n          >\n            {category.charAt(0).toUpperCase() + category.slice(1)}\n          </button>\n        ))}\n      </div>\n      \n      {showAddForm && (\n        <div className=\"mb-6\">\n          <AddTaskForm onClose={() => setShowAddForm(false)} />\n        </div>\n      )}\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {/* Pending Tasks */}\n        <div className=\"bg-white rounded-lg shadow-md p-4\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-bold\">To Do</h3>\n            <span className=\"bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded\">\n              {filterTasks(pendingTasks).length}\n            </span>\n          </div>\n          \n          <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n            {filterTasks(pendingTasks).length > 0 ? (\n              filterTasks(pendingTasks).map(task => (\n                <TaskItem key={task.content} task={task} />\n              ))\n            ) : (\n              <p className=\"text-sm text-gray-500 italic\">No pending tasks</p>\n            )}\n          </div>\n        </div>\n        \n        {/* In Progress Tasks (placeholder for future) */}\n        <div className=\"bg-white rounded-lg shadow-md p-4\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-bold\">In Progress</h3>\n            <span className=\"bg-yellow-100 text-yellow-800 text-xs font-medium px-2.5 py-0.5 rounded\">\n              0\n            </span>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <p className=\"text-sm text-gray-500 italic\">No tasks in progress</p>\n          </div>\n        </div>\n        \n        {/* Completed Tasks */}\n        <div className=\"bg-white rounded-lg shadow-md p-4\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-bold\">Completed</h3>\n            <span className=\"bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded\">\n              {filterTasks(completedTasks).length}\n            </span>\n          </div>\n          \n          <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n            {filterTasks(completedTasks).length > 0 ? (\n              filterTasks(completedTasks).map(task => (\n                <TaskItem key={task.content} task={task} />\n              ))\n            ) : (\n              <p className=\"text-sm text-gray-500 italic\">No completed tasks</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TasksTracker;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,CAAEC,SAAS,KAAQ,cAAc,CAC9C,OAASC,YAAY,KAAQ,6BAA6B,CAC1D,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAEC,aAAa,CAAEC,OAAO,CAAEC,WAAY,CAAC,CAAGV,YAAY,CAAC,CAAC,CAC9D,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACgB,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAEvD,GAAIY,OAAO,EAAI,CAACD,aAAa,CAAE,CAC7B,mBACEJ,IAAA,QAAKW,SAAS,CAAC,yEAAyE,CAAAC,QAAA,cACtFZ,IAAA,QAAKW,SAAS,CAAC,8DAA8D,CAAM,CAAC,CACjF,CAAC,CAEV,CAEA,KAAM,CAAEE,KAAM,CAAC,CAAGT,aAAa,CAE/B;AACA,KAAM,CAAAU,YAAY,CAAGD,KAAK,CAACE,MAAM,CAACC,IAAI,EAAI,CAACA,IAAI,CAACC,SAAS,CAAC,CAC1D,KAAM,CAAAC,cAAc,CAAGL,KAAK,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,SAAS,CAAC,CAE3D;AACA,KAAM,CAAAE,WAAW,CAAIC,KAAK,EAAK,CAC7B,GAAIX,YAAY,GAAK,KAAK,CAAE,MAAO,CAAAW,KAAK,CACxC,MAAO,CAAAA,KAAK,CAACL,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACK,QAAQ,CAACC,WAAW,CAAC,CAAC,GAAKb,YAAY,CAACa,WAAW,CAAC,CAAC,CAAC,CACzF,CAAC,CAED,KAAM,CAAAC,UAAU,CAAG,CAAC,KAAK,CAAE,UAAU,CAAE,SAAS,CAAE,YAAY,CAAE,kBAAkB,CAAE,YAAY,CAAC,CAEjG,mBACErB,KAAA,QAAAU,QAAA,eACEV,KAAA,QAAKS,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDZ,IAAA,OAAIW,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,cACrDV,KAAA,QAAKS,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BZ,IAAA,WACEwB,OAAO,CAAEA,CAAA,GAAMlB,WAAW,CAAC,CAAE,CAC7BK,SAAS,CAAC,gDAAgD,CAC1D,aAAW,cAAc,CAAAC,QAAA,cAEzBZ,IAAA,CAACL,SAAS,EAAC8B,IAAI,CAAE,EAAG,CAAE,CAAC,CACjB,CAAC,cACTvB,KAAA,WACEsB,OAAO,CAAEA,CAAA,GAAMhB,cAAc,CAAC,IAAI,CAAE,CACpCG,SAAS,CAAC,+DAA+D,CAAAC,QAAA,eAEzEZ,IAAA,CAACN,IAAI,EAAC+B,IAAI,CAAE,EAAG,CAACd,SAAS,CAAC,MAAM,CAAE,CAAC,YACrC,EAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAGNX,IAAA,QAAKW,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CACvCW,UAAU,CAACG,GAAG,CAACL,QAAQ,eACtBrB,IAAA,WAEEwB,OAAO,CAAEA,CAAA,GAAMd,eAAe,CAACW,QAAQ,CAAE,CACzCV,SAAS,mCAAAgB,MAAA,CACPlB,YAAY,GAAKY,QAAQ,CACrB,wBAAwB,CACxB,6CAA6C,CAChD,CAAAT,QAAA,CAEFS,QAAQ,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGR,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,EARhDT,QASC,CACT,CAAC,CACC,CAAC,CAELd,WAAW,eACVP,IAAA,QAAKW,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBZ,IAAA,CAACF,WAAW,EAACiC,OAAO,CAAEA,CAAA,GAAMvB,cAAc,CAAC,KAAK,CAAE,CAAE,CAAC,CAClD,CACN,cAEDN,KAAA,QAAKS,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eAEpDV,KAAA,QAAKS,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChDV,KAAA,QAAKS,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDZ,IAAA,OAAIW,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,OAAK,CAAI,CAAC,cAC5CZ,IAAA,SAAMW,SAAS,CAAC,qEAAqE,CAAAC,QAAA,CAClFO,WAAW,CAACL,YAAY,CAAC,CAACkB,MAAM,CAC7B,CAAC,EACJ,CAAC,cAENhC,IAAA,QAAKW,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAChDO,WAAW,CAACL,YAAY,CAAC,CAACkB,MAAM,CAAG,CAAC,CACnCb,WAAW,CAACL,YAAY,CAAC,CAACY,GAAG,CAACV,IAAI,eAChChB,IAAA,CAACH,QAAQ,EAAoBmB,IAAI,CAAEA,IAAK,EAAzBA,IAAI,CAACiB,OAAsB,CAC3C,CAAC,cAEFjC,IAAA,MAAGW,SAAS,CAAC,8BAA8B,CAAAC,QAAA,CAAC,kBAAgB,CAAG,CAChE,CACE,CAAC,EACH,CAAC,cAGNV,KAAA,QAAKS,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChDV,KAAA,QAAKS,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDZ,IAAA,OAAIW,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,aAAW,CAAI,CAAC,cAClDZ,IAAA,SAAMW,SAAS,CAAC,yEAAyE,CAAAC,QAAA,CAAC,GAE1F,CAAM,CAAC,EACJ,CAAC,cAENZ,IAAA,QAAKW,SAAS,CAAC,WAAW,CAAAC,QAAA,cACxBZ,IAAA,MAAGW,SAAS,CAAC,8BAA8B,CAAAC,QAAA,CAAC,sBAAoB,CAAG,CAAC,CACjE,CAAC,EACH,CAAC,cAGNV,KAAA,QAAKS,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChDV,KAAA,QAAKS,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDZ,IAAA,OAAIW,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,WAAS,CAAI,CAAC,cAChDZ,IAAA,SAAMW,SAAS,CAAC,uEAAuE,CAAAC,QAAA,CACpFO,WAAW,CAACD,cAAc,CAAC,CAACc,MAAM,CAC/B,CAAC,EACJ,CAAC,cAENhC,IAAA,QAAKW,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAChDO,WAAW,CAACD,cAAc,CAAC,CAACc,MAAM,CAAG,CAAC,CACrCb,WAAW,CAACD,cAAc,CAAC,CAACQ,GAAG,CAACV,IAAI,eAClChB,IAAA,CAACH,QAAQ,EAAoBmB,IAAI,CAAEA,IAAK,EAAzBA,IAAI,CAACiB,OAAsB,CAC3C,CAAC,cAEFjC,IAAA,MAAGW,SAAS,CAAC,8BAA8B,CAAAC,QAAA,CAAC,oBAAkB,CAAG,CAClE,CACE,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}