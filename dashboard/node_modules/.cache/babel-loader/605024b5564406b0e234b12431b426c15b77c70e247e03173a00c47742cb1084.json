{"ast":null,"code":"/**\n * Tasks Template Generator\n * Provides task templates based on tracks and career phases\n */\n\n// Define task templates for different tracks\nconst taskTemplates = {\n  // AWS/Cloud track tasks\n  aws: {\n    onetime: [{\n      content: \"Set up AWS Free Tier Account\",\n      category: \"aws\",\n      priority: \"high\",\n      due: \"1 week\"\n    }, {\n      content: \"Register for AWS Certified Cloud Practitioner Exam\",\n      category: \"certification\",\n      priority: \"high\",\n      due: \"1 month\"\n    }, {\n      content: \"Complete Adrian Cantrill AWS SAA course\",\n      category: \"learning\",\n      priority: \"high\",\n      due: \"3 months\"\n    }, {\n      content: \"Build a serverless application on AWS\",\n      category: \"project\",\n      priority: \"medium\",\n      due: \"2 months\"\n    }, {\n      content: \"Deploy a static website on S3 with CloudFront\",\n      category: \"project\",\n      priority: \"medium\",\n      due: \"1 month\"\n    }],\n    daily: [{\n      content: \"Review AWS flashcards for 15 minutes\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Practice AWS CLI commands\",\n      category: \"skill\",\n      priority: \"medium\"\n    }],\n    weekly: [{\n      content: \"Complete one AWS hands-on lab\",\n      category: \"learning\",\n      priority: \"high\"\n    }, {\n      content: \"Read AWS blog posts for new services\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Update AWS project documentation\",\n      category: \"project\",\n      priority: \"medium\"\n    }],\n    monthly: [{\n      content: \"Take AWS practice exam\",\n      category: \"certification\",\n      priority: \"high\"\n    }, {\n      content: \"Review AWS billing and optimize costs\",\n      category: \"skill\",\n      priority: \"medium\"\n    }, {\n      content: \"Participate in AWS online community\",\n      category: \"networking\",\n      priority: \"medium\"\n    }]\n  },\n  // Infrastructure as Code track tasks\n  terraform: {\n    onetime: [{\n      content: \"Install Terraform and setup development environment\",\n      category: \"terraform\",\n      priority: \"high\",\n      due: \"1 week\"\n    }, {\n      content: \"Register for HashiCorp Terraform Associate Exam\",\n      category: \"certification\",\n      priority: \"high\",\n      due: \"2 months\"\n    }, {\n      content: \"Complete Terraform: Up & Running book exercises\",\n      category: \"learning\",\n      priority: \"high\",\n      due: \"2 months\"\n    }, {\n      content: \"Build multi-environment infrastructure with Terraform\",\n      category: \"project\",\n      priority: \"medium\",\n      due: \"3 months\"\n    }, {\n      content: \"Create a custom Terraform module\",\n      category: \"project\",\n      priority: \"medium\",\n      due: \"2 months\"\n    }],\n    daily: [{\n      content: \"Practice Terraform commands and syntax\",\n      category: \"skill\",\n      priority: \"medium\"\n    }, {\n      content: \"Review Terraform documentation\",\n      category: \"learning\",\n      priority: \"medium\"\n    }],\n    weekly: [{\n      content: \"Read HashiCorp blog posts\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Refactor and improve Terraform code\",\n      category: \"project\",\n      priority: \"medium\"\n    }, {\n      content: \"Experiment with new Terraform providers\",\n      category: \"learning\",\n      priority: \"medium\"\n    }],\n    monthly: [{\n      content: \"Take Terraform practice exam\",\n      category: \"certification\",\n      priority: \"high\"\n    }, {\n      content: \"Research Terraform best practices\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Contribute to Terraform open source\",\n      category: \"project\",\n      priority: \"low\"\n    }]\n  },\n  // Kubernetes track tasks\n  kubernetes: {\n    onetime: [{\n      content: \"Set up local Kubernetes cluster with Minikube\",\n      category: \"kubernetes\",\n      priority: \"high\",\n      due: \"1 week\"\n    }, {\n      content: \"Register for CKA or CKAD exam\",\n      category: \"certification\",\n      priority: \"high\",\n      due: \"3 months\"\n    }, {\n      content: \"Complete Kubernetes in Action book exercises\",\n      category: \"learning\",\n      priority: \"high\",\n      due: \"2 months\"\n    }, {\n      content: \"Deploy a microservices application on Kubernetes\",\n      category: \"project\",\n      priority: \"medium\",\n      due: \"3 months\"\n    }, {\n      content: \"Implement monitoring for Kubernetes with Prometheus\",\n      category: \"project\",\n      priority: \"medium\",\n      due: \"2 months\"\n    }],\n    daily: [{\n      content: \"Practice kubectl commands\",\n      category: \"skill\",\n      priority: \"medium\"\n    }, {\n      content: \"Read Kubernetes documentation\",\n      category: \"learning\",\n      priority: \"medium\"\n    }],\n    weekly: [{\n      content: \"Deploy a new application to Kubernetes\",\n      category: \"project\",\n      priority: \"medium\"\n    }, {\n      content: \"Read Kubernetes blog posts\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Practice debugging Kubernetes issues\",\n      category: \"skill\",\n      priority: \"high\"\n    }],\n    monthly: [{\n      content: \"Take CKA/CKAD practice exam\",\n      category: \"certification\",\n      priority: \"high\"\n    }, {\n      content: \"Experiment with advanced Kubernetes features\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Attend Kubernetes community meetings\",\n      category: \"networking\",\n      priority: \"medium\"\n    }]\n  },\n  // CI/CD track tasks\n  cicd: {\n    onetime: [{\n      content: \"Set up a personal GitHub Actions workflow\",\n      category: \"cicd\",\n      priority: \"high\",\n      due: \"1 week\"\n    }, {\n      content: \"Create a comprehensive CI/CD pipeline\",\n      category: \"project\",\n      priority: \"high\",\n      due: \"2 months\"\n    }, {\n      content: \"Implement automated testing in CI/CD pipeline\",\n      category: \"project\",\n      priority: \"high\",\n      due: \"1 month\"\n    }, {\n      content: \"Build a deployment pipeline with multiple environments\",\n      category: \"project\",\n      priority: \"medium\",\n      due: \"3 months\"\n    }, {\n      content: \"Implement infrastructure deployment in CI/CD\",\n      category: \"project\",\n      priority: \"medium\",\n      due: \"2 months\"\n    }],\n    daily: [{\n      content: \"Review CI/CD pipeline status\",\n      category: \"skill\",\n      priority: \"medium\"\n    }, {\n      content: \"Practice GitHub Actions workflows\",\n      category: \"skill\",\n      priority: \"medium\"\n    }],\n    weekly: [{\n      content: \"Read CI/CD blog posts\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Refactor and improve CI/CD pipelines\",\n      category: \"project\",\n      priority: \"medium\"\n    }, {\n      content: \"Experiment with different CI/CD tools\",\n      category: \"learning\",\n      priority: \"medium\"\n    }],\n    monthly: [{\n      content: \"Research new CI/CD trends\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Learn a new deployment pattern\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Optimize CI/CD pipeline performance\",\n      category: \"project\",\n      priority: \"medium\"\n    }]\n  },\n  // General DevOps tasks\n  devops: {\n    onetime: [{\n      content: \"Create a personal DevOps portfolio site\",\n      category: \"project\",\n      priority: \"high\",\n      due: \"1 month\"\n    }, {\n      content: \"Configure a personal cloud lab environment\",\n      category: \"project\",\n      priority: \"high\",\n      due: \"2 weeks\"\n    }, {\n      content: \"Read The DevOps Handbook\",\n      category: \"learning\",\n      priority: \"high\",\n      due: \"2 months\"\n    }, {\n      content: \"Join DevOps community forums\",\n      category: \"networking\",\n      priority: \"medium\",\n      due: \"1 week\"\n    }, {\n      content: \"Setup a monitoring dashboard for personal projects\",\n      category: \"project\",\n      priority: \"medium\",\n      due: \"1 month\"\n    }],\n    daily: [{\n      content: \"Read DevOps articles for 15 minutes\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Practice Linux command line skills\",\n      category: \"skill\",\n      priority: \"medium\"\n    }],\n    weekly: [{\n      content: \"Update career development plan\",\n      category: \"career\",\n      priority: \"high\"\n    }, {\n      content: \"Connect with DevOps professionals on LinkedIn\",\n      category: \"networking\",\n      priority: \"medium\"\n    }, {\n      content: \"Contribute to GitHub projects\",\n      category: \"project\",\n      priority: \"medium\"\n    }],\n    monthly: [{\n      content: \"Publish a DevOps technical blog post\",\n      category: \"content\",\n      priority: \"medium\"\n    }, {\n      content: \"Learn a new DevOps tool\",\n      category: \"learning\",\n      priority: \"medium\"\n    }, {\n      content: \"Attend a DevOps virtual meetup\",\n      category: \"networking\",\n      priority: \"medium\"\n    }]\n  }\n};\n\n// Common recurring tasks that apply to all tracks\nconst commonTasks = {\n  daily: [{\n    content: \"Update daily progress log\",\n    category: \"career\",\n    priority: \"medium\"\n  }],\n  weekly: [{\n    content: \"Complete weekly reflection\",\n    category: \"career\",\n    priority: \"high\"\n  }, {\n    content: \"Update LinkedIn profile and activity\",\n    category: \"networking\",\n    priority: \"medium\"\n  }],\n  monthly: [{\n    content: \"Evaluate monthly goals and progress\",\n    category: \"career\",\n    priority: \"high\"\n  }, {\n    content: \"Research industry trends\",\n    category: \"learning\",\n    priority: \"medium\"\n  }]\n};\n\n/**\n * Generate ID for a task\n * @returns {string} Unique ID for the task\n */\nconst generateTaskId = () => {\n  return `task-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n};\n\n/**\n * Format tasks with IDs and proper due dates\n * @param {Array} tasks - Array of task objects\n * @param {string} taskType - onetime, daily, weekly, or monthly\n * @returns {Array} Formatted task objects\n */\nconst formatTasks = (tasks, taskType) => {\n  return tasks.map(task => {\n    const formattedTask = {\n      ...task,\n      id: generateTaskId(),\n      completed: false\n    };\n\n    // Handle due dates for onetime tasks\n    if (taskType === 'onetime' && task.due) {\n      const today = new Date();\n      let dueDate = new Date(today);\n      if (task.due.includes('week')) {\n        const weeks = parseInt(task.due.split(' ')[0]);\n        dueDate.setDate(today.getDate() + weeks * 7);\n      } else if (task.due.includes('month')) {\n        const months = parseInt(task.due.split(' ')[0]);\n        dueDate.setMonth(today.getMonth() + months);\n      }\n      formattedTask.due = dueDate.toISOString().split('T')[0];\n    }\n    return formattedTask;\n  });\n};\n\n/**\n * Get tasks for a specific track\n * @param {string} track - aws, terraform, kubernetes, cicd, or devops\n * @param {boolean} includeRecurring - Include recurring tasks\n * @returns {Object} Tasks organized by type\n */\nexport const getTrackTasks = (track = 'devops', includeRecurring = true) => {\n  // Get track-specific tasks\n  const trackSpecificTasks = taskTemplates[track] || taskTemplates.devops;\n\n  // Format tasks and add IDs\n  const formattedOneTimeTasks = formatTasks(trackSpecificTasks.onetime, 'onetime');\n\n  // Include recurring tasks if requested\n  if (includeRecurring) {\n    const formattedRecurringTasks = {\n      daily: formatTasks([...trackSpecificTasks.daily, ...commonTasks.daily], 'daily'),\n      weekly: formatTasks([...trackSpecificTasks.weekly, ...commonTasks.weekly], 'weekly'),\n      monthly: formatTasks([...trackSpecificTasks.monthly, ...commonTasks.monthly], 'monthly')\n    };\n    return {\n      onetime: formattedOneTimeTasks,\n      recurring: formattedRecurringTasks\n    };\n  }\n  return {\n    onetime: formattedOneTimeTasks\n  };\n};\n\n/**\n * Get tasks for multiple tracks\n * @param {Array} tracks - Array of track names\n * @param {boolean} includeRecurring - Include recurring tasks\n * @returns {Object} Combined tasks\n */\nexport const getMultiTrackTasks = (tracks = [], includeRecurring = true) => {\n  // Default to devops if no tracks provided\n  if (tracks.length === 0) {\n    return getTrackTasks('devops', includeRecurring);\n  }\n\n  // Combine onetime tasks from all selected tracks\n  const oneTimeTasks = [];\n\n  // For recurring tasks, we'll keep all tasks but deduplicate\n  const dailyTasks = [...commonTasks.daily];\n  const weeklyTasks = [...commonTasks.weekly];\n  const monthlyTasks = [...commonTasks.monthly];\n  tracks.forEach(track => {\n    if (taskTemplates[track]) {\n      // Add onetime tasks\n      oneTimeTasks.push(...taskTemplates[track].onetime);\n\n      // Add recurring tasks if requested (avoiding duplicates by content)\n      if (includeRecurring) {\n        taskTemplates[track].daily.forEach(task => {\n          if (!dailyTasks.some(t => t.content === task.content)) {\n            dailyTasks.push(task);\n          }\n        });\n        taskTemplates[track].weekly.forEach(task => {\n          if (!weeklyTasks.some(t => t.content === task.content)) {\n            weeklyTasks.push(task);\n          }\n        });\n        taskTemplates[track].monthly.forEach(task => {\n          if (!monthlyTasks.some(t => t.content === task.content)) {\n            monthlyTasks.push(task);\n          }\n        });\n      }\n    }\n  });\n\n  // Format all tasks\n  const formattedOneTimeTasks = formatTasks(oneTimeTasks, 'onetime');\n  if (includeRecurring) {\n    return {\n      onetime: formattedOneTimeTasks,\n      recurring: {\n        daily: formatTasks(dailyTasks, 'daily'),\n        weekly: formatTasks(weeklyTasks, 'weekly'),\n        monthly: formatTasks(monthlyTasks, 'monthly')\n      }\n    };\n  }\n  return {\n    onetime: formattedOneTimeTasks\n  };\n};\nexport default {\n  getTrackTasks,\n  getMultiTrackTasks\n};","map":{"version":3,"names":["taskTemplates","aws","onetime","content","category","priority","due","daily","weekly","monthly","terraform","kubernetes","cicd","devops","commonTasks","generateTaskId","Date","now","Math","floor","random","formatTasks","tasks","taskType","map","task","formattedTask","id","completed","today","dueDate","includes","weeks","parseInt","split","setDate","getDate","months","setMonth","getMonth","toISOString","getTrackTasks","track","includeRecurring","trackSpecificTasks","formattedOneTimeTasks","formattedRecurringTasks","recurring","getMultiTrackTasks","tracks","length","oneTimeTasks","dailyTasks","weeklyTasks","monthlyTasks","forEach","push","some","t"],"sources":["/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/data/templates/tasks-template.js"],"sourcesContent":["/**\n * Tasks Template Generator\n * Provides task templates based on tracks and career phases\n */\n\n// Define task templates for different tracks\nconst taskTemplates = {\n  // AWS/Cloud track tasks\n  aws: {\n    onetime: [\n      {\n        content: \"Set up AWS Free Tier Account\",\n        category: \"aws\",\n        priority: \"high\",\n        due: \"1 week\"\n      },\n      {\n        content: \"Register for AWS Certified Cloud Practitioner Exam\",\n        category: \"certification\",\n        priority: \"high\",\n        due: \"1 month\"\n      },\n      {\n        content: \"Complete Adrian Cantrill AWS SAA course\",\n        category: \"learning\",\n        priority: \"high\",\n        due: \"3 months\"\n      },\n      {\n        content: \"Build a serverless application on AWS\",\n        category: \"project\",\n        priority: \"medium\",\n        due: \"2 months\"\n      },\n      {\n        content: \"Deploy a static website on S3 with CloudFront\",\n        category: \"project\",\n        priority: \"medium\",\n        due: \"1 month\"\n      }\n    ],\n    daily: [\n      {\n        content: \"Review AWS flashcards for 15 minutes\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Practice AWS CLI commands\",\n        category: \"skill\",\n        priority: \"medium\"\n      }\n    ],\n    weekly: [\n      {\n        content: \"Complete one AWS hands-on lab\",\n        category: \"learning\",\n        priority: \"high\"\n      },\n      {\n        content: \"Read AWS blog posts for new services\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Update AWS project documentation\",\n        category: \"project\",\n        priority: \"medium\"\n      }\n    ],\n    monthly: [\n      {\n        content: \"Take AWS practice exam\",\n        category: \"certification\",\n        priority: \"high\"\n      },\n      {\n        content: \"Review AWS billing and optimize costs\",\n        category: \"skill\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Participate in AWS online community\",\n        category: \"networking\",\n        priority: \"medium\"\n      }\n    ]\n  },\n  \n  // Infrastructure as Code track tasks\n  terraform: {\n    onetime: [\n      {\n        content: \"Install Terraform and setup development environment\",\n        category: \"terraform\",\n        priority: \"high\",\n        due: \"1 week\"\n      },\n      {\n        content: \"Register for HashiCorp Terraform Associate Exam\",\n        category: \"certification\",\n        priority: \"high\",\n        due: \"2 months\"\n      },\n      {\n        content: \"Complete Terraform: Up & Running book exercises\",\n        category: \"learning\",\n        priority: \"high\",\n        due: \"2 months\"\n      },\n      {\n        content: \"Build multi-environment infrastructure with Terraform\",\n        category: \"project\",\n        priority: \"medium\",\n        due: \"3 months\"\n      },\n      {\n        content: \"Create a custom Terraform module\",\n        category: \"project\",\n        priority: \"medium\",\n        due: \"2 months\"\n      }\n    ],\n    daily: [\n      {\n        content: \"Practice Terraform commands and syntax\",\n        category: \"skill\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Review Terraform documentation\",\n        category: \"learning\",\n        priority: \"medium\"\n      }\n    ],\n    weekly: [\n      {\n        content: \"Read HashiCorp blog posts\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Refactor and improve Terraform code\",\n        category: \"project\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Experiment with new Terraform providers\",\n        category: \"learning\",\n        priority: \"medium\"\n      }\n    ],\n    monthly: [\n      {\n        content: \"Take Terraform practice exam\",\n        category: \"certification\",\n        priority: \"high\"\n      },\n      {\n        content: \"Research Terraform best practices\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Contribute to Terraform open source\",\n        category: \"project\",\n        priority: \"low\"\n      }\n    ]\n  },\n  \n  // Kubernetes track tasks\n  kubernetes: {\n    onetime: [\n      {\n        content: \"Set up local Kubernetes cluster with Minikube\",\n        category: \"kubernetes\",\n        priority: \"high\",\n        due: \"1 week\"\n      },\n      {\n        content: \"Register for CKA or CKAD exam\",\n        category: \"certification\",\n        priority: \"high\",\n        due: \"3 months\"\n      },\n      {\n        content: \"Complete Kubernetes in Action book exercises\",\n        category: \"learning\",\n        priority: \"high\",\n        due: \"2 months\"\n      },\n      {\n        content: \"Deploy a microservices application on Kubernetes\",\n        category: \"project\",\n        priority: \"medium\",\n        due: \"3 months\"\n      },\n      {\n        content: \"Implement monitoring for Kubernetes with Prometheus\",\n        category: \"project\",\n        priority: \"medium\",\n        due: \"2 months\"\n      }\n    ],\n    daily: [\n      {\n        content: \"Practice kubectl commands\",\n        category: \"skill\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Read Kubernetes documentation\",\n        category: \"learning\",\n        priority: \"medium\"\n      }\n    ],\n    weekly: [\n      {\n        content: \"Deploy a new application to Kubernetes\",\n        category: \"project\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Read Kubernetes blog posts\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Practice debugging Kubernetes issues\",\n        category: \"skill\",\n        priority: \"high\"\n      }\n    ],\n    monthly: [\n      {\n        content: \"Take CKA/CKAD practice exam\",\n        category: \"certification\",\n        priority: \"high\"\n      },\n      {\n        content: \"Experiment with advanced Kubernetes features\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Attend Kubernetes community meetings\",\n        category: \"networking\",\n        priority: \"medium\"\n      }\n    ]\n  },\n  \n  // CI/CD track tasks\n  cicd: {\n    onetime: [\n      {\n        content: \"Set up a personal GitHub Actions workflow\",\n        category: \"cicd\",\n        priority: \"high\",\n        due: \"1 week\"\n      },\n      {\n        content: \"Create a comprehensive CI/CD pipeline\",\n        category: \"project\",\n        priority: \"high\",\n        due: \"2 months\"\n      },\n      {\n        content: \"Implement automated testing in CI/CD pipeline\",\n        category: \"project\",\n        priority: \"high\",\n        due: \"1 month\"\n      },\n      {\n        content: \"Build a deployment pipeline with multiple environments\",\n        category: \"project\",\n        priority: \"medium\",\n        due: \"3 months\"\n      },\n      {\n        content: \"Implement infrastructure deployment in CI/CD\",\n        category: \"project\",\n        priority: \"medium\",\n        due: \"2 months\"\n      }\n    ],\n    daily: [\n      {\n        content: \"Review CI/CD pipeline status\",\n        category: \"skill\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Practice GitHub Actions workflows\",\n        category: \"skill\",\n        priority: \"medium\"\n      }\n    ],\n    weekly: [\n      {\n        content: \"Read CI/CD blog posts\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Refactor and improve CI/CD pipelines\",\n        category: \"project\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Experiment with different CI/CD tools\",\n        category: \"learning\",\n        priority: \"medium\"\n      }\n    ],\n    monthly: [\n      {\n        content: \"Research new CI/CD trends\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Learn a new deployment pattern\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Optimize CI/CD pipeline performance\",\n        category: \"project\",\n        priority: \"medium\"\n      }\n    ]\n  },\n  \n  // General DevOps tasks\n  devops: {\n    onetime: [\n      {\n        content: \"Create a personal DevOps portfolio site\",\n        category: \"project\",\n        priority: \"high\",\n        due: \"1 month\"\n      },\n      {\n        content: \"Configure a personal cloud lab environment\",\n        category: \"project\",\n        priority: \"high\",\n        due: \"2 weeks\"\n      },\n      {\n        content: \"Read The DevOps Handbook\",\n        category: \"learning\",\n        priority: \"high\",\n        due: \"2 months\"\n      },\n      {\n        content: \"Join DevOps community forums\",\n        category: \"networking\",\n        priority: \"medium\",\n        due: \"1 week\"\n      },\n      {\n        content: \"Setup a monitoring dashboard for personal projects\",\n        category: \"project\",\n        priority: \"medium\",\n        due: \"1 month\"\n      }\n    ],\n    daily: [\n      {\n        content: \"Read DevOps articles for 15 minutes\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Practice Linux command line skills\",\n        category: \"skill\",\n        priority: \"medium\"\n      }\n    ],\n    weekly: [\n      {\n        content: \"Update career development plan\",\n        category: \"career\",\n        priority: \"high\"\n      },\n      {\n        content: \"Connect with DevOps professionals on LinkedIn\",\n        category: \"networking\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Contribute to GitHub projects\",\n        category: \"project\",\n        priority: \"medium\"\n      }\n    ],\n    monthly: [\n      {\n        content: \"Publish a DevOps technical blog post\",\n        category: \"content\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Learn a new DevOps tool\",\n        category: \"learning\",\n        priority: \"medium\"\n      },\n      {\n        content: \"Attend a DevOps virtual meetup\",\n        category: \"networking\",\n        priority: \"medium\"\n      }\n    ]\n  }\n};\n\n// Common recurring tasks that apply to all tracks\nconst commonTasks = {\n  daily: [\n    {\n      content: \"Update daily progress log\",\n      category: \"career\",\n      priority: \"medium\"\n    }\n  ],\n  weekly: [\n    {\n      content: \"Complete weekly reflection\",\n      category: \"career\",\n      priority: \"high\"\n    },\n    {\n      content: \"Update LinkedIn profile and activity\",\n      category: \"networking\",\n      priority: \"medium\"\n    }\n  ],\n  monthly: [\n    {\n      content: \"Evaluate monthly goals and progress\",\n      category: \"career\",\n      priority: \"high\"\n    },\n    {\n      content: \"Research industry trends\",\n      category: \"learning\",\n      priority: \"medium\"\n    }\n  ]\n};\n\n/**\n * Generate ID for a task\n * @returns {string} Unique ID for the task\n */\nconst generateTaskId = () => {\n  return `task-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n};\n\n/**\n * Format tasks with IDs and proper due dates\n * @param {Array} tasks - Array of task objects\n * @param {string} taskType - onetime, daily, weekly, or monthly\n * @returns {Array} Formatted task objects\n */\nconst formatTasks = (tasks, taskType) => {\n  return tasks.map(task => {\n    const formattedTask = {\n      ...task,\n      id: generateTaskId(),\n      completed: false\n    };\n    \n    // Handle due dates for onetime tasks\n    if (taskType === 'onetime' && task.due) {\n      const today = new Date();\n      let dueDate = new Date(today);\n      \n      if (task.due.includes('week')) {\n        const weeks = parseInt(task.due.split(' ')[0]);\n        dueDate.setDate(today.getDate() + (weeks * 7));\n      } else if (task.due.includes('month')) {\n        const months = parseInt(task.due.split(' ')[0]);\n        dueDate.setMonth(today.getMonth() + months);\n      }\n      \n      formattedTask.due = dueDate.toISOString().split('T')[0];\n    }\n    \n    return formattedTask;\n  });\n};\n\n/**\n * Get tasks for a specific track\n * @param {string} track - aws, terraform, kubernetes, cicd, or devops\n * @param {boolean} includeRecurring - Include recurring tasks\n * @returns {Object} Tasks organized by type\n */\nexport const getTrackTasks = (track = 'devops', includeRecurring = true) => {\n  // Get track-specific tasks\n  const trackSpecificTasks = taskTemplates[track] || taskTemplates.devops;\n  \n  // Format tasks and add IDs\n  const formattedOneTimeTasks = formatTasks(trackSpecificTasks.onetime, 'onetime');\n  \n  // Include recurring tasks if requested\n  if (includeRecurring) {\n    const formattedRecurringTasks = {\n      daily: formatTasks([...trackSpecificTasks.daily, ...commonTasks.daily], 'daily'),\n      weekly: formatTasks([...trackSpecificTasks.weekly, ...commonTasks.weekly], 'weekly'),\n      monthly: formatTasks([...trackSpecificTasks.monthly, ...commonTasks.monthly], 'monthly')\n    };\n    \n    return {\n      onetime: formattedOneTimeTasks,\n      recurring: formattedRecurringTasks\n    };\n  }\n  \n  return {\n    onetime: formattedOneTimeTasks\n  };\n};\n\n/**\n * Get tasks for multiple tracks\n * @param {Array} tracks - Array of track names\n * @param {boolean} includeRecurring - Include recurring tasks\n * @returns {Object} Combined tasks\n */\nexport const getMultiTrackTasks = (tracks = [], includeRecurring = true) => {\n  // Default to devops if no tracks provided\n  if (tracks.length === 0) {\n    return getTrackTasks('devops', includeRecurring);\n  }\n  \n  // Combine onetime tasks from all selected tracks\n  const oneTimeTasks = [];\n  \n  // For recurring tasks, we'll keep all tasks but deduplicate\n  const dailyTasks = [...commonTasks.daily];\n  const weeklyTasks = [...commonTasks.weekly];\n  const monthlyTasks = [...commonTasks.monthly];\n  \n  tracks.forEach(track => {\n    if (taskTemplates[track]) {\n      // Add onetime tasks\n      oneTimeTasks.push(...taskTemplates[track].onetime);\n      \n      // Add recurring tasks if requested (avoiding duplicates by content)\n      if (includeRecurring) {\n        taskTemplates[track].daily.forEach(task => {\n          if (!dailyTasks.some(t => t.content === task.content)) {\n            dailyTasks.push(task);\n          }\n        });\n        \n        taskTemplates[track].weekly.forEach(task => {\n          if (!weeklyTasks.some(t => t.content === task.content)) {\n            weeklyTasks.push(task);\n          }\n        });\n        \n        taskTemplates[track].monthly.forEach(task => {\n          if (!monthlyTasks.some(t => t.content === task.content)) {\n            monthlyTasks.push(task);\n          }\n        });\n      }\n    }\n  });\n  \n  // Format all tasks\n  const formattedOneTimeTasks = formatTasks(oneTimeTasks, 'onetime');\n  \n  if (includeRecurring) {\n    return {\n      onetime: formattedOneTimeTasks,\n      recurring: {\n        daily: formatTasks(dailyTasks, 'daily'),\n        weekly: formatTasks(weeklyTasks, 'weekly'),\n        monthly: formatTasks(monthlyTasks, 'monthly')\n      }\n    };\n  }\n  \n  return {\n    onetime: formattedOneTimeTasks\n  };\n};\n\nexport default {\n  getTrackTasks,\n  getMultiTrackTasks\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}