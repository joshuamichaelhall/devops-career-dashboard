{"ast":null,"code":"var _jsxFileName = \"/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/components/ClayConnectForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connectToClayApi, checkClayConnection } from '../services/clayApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClayConnectForm = ({\n  onSuccess\n}) => {\n  _s();\n  const [apiKey, setApiKey] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState('');\n  const [connectionStatus, setConnectionStatus] = useState({\n    connected: false,\n    lastConnected: null\n  });\n\n  // Check connection status on mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      try {\n        const status = await checkClayConnection();\n        setConnectionStatus(status);\n      } catch (err) {\n        console.error('Error checking connection:', err);\n        setConnectionStatus({\n          connected: false\n        });\n      }\n    };\n    checkConnection();\n  }, []);\n  const handleConnect = async e => {\n    e.preventDefault();\n    if (!apiKey.trim()) {\n      setError('API key is required');\n      return;\n    }\n    try {\n      setIsConnecting(true);\n      setError('');\n      const result = await connectToClayApi(apiKey);\n      if (result.success) {\n        setConnectionStatus({\n          connected: true,\n          lastConnected: new Date().toISOString()\n        });\n        setApiKey('');\n        if (onSuccess) {\n          onSuccess();\n        }\n      } else {\n        setError(result.error || 'Failed to connect to Clay CRM');\n      }\n    } catch (err) {\n      console.error('Error connecting to Clay:', err);\n      setError('Failed to connect to Clay CRM. Please check your API key and try again.');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-4 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-bold mb-4\",\n      children: \"Clay CRM Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), connectionStatus.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: \"\\uD83D\\uDFE2 Connected to Clay CRM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), connectionStatus.lastConnected && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: [\"Last connected: \", formatDate(connectionStatus.lastConnected)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setConnectionStatus({\n          connected: false\n        }),\n        className: \"mt-2 text-sm bg-white px-3 py-1 rounded border border-green-400 hover:bg-green-50\",\n        children: \"Reconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 text-red-700 p-3 rounded mb-4 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-4\",\n        children: \"Connect your Clay CRM account to track your networking progress and relationships. You can find your API key in your Clay CRM account settings.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleConnect,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Clay CRM API Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: apiKey,\n            onChange: e => setApiKey(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n            placeholder: \"Enter your Clay CRM API key\",\n            disabled: isConnecting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n            disabled: isConnecting,\n            children: isConnecting ? 'Connecting...' : 'Connect Clay CRM'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 mt-4\",\n        children: [\"Don't have a Clay CRM account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://clay.earth\",\n          className: \"text-blue-600 hover:underline\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"Sign up here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ClayConnectForm, \"MtTrvq8R7+bfiqDfRgXM6a8Ey08=\");\n_c = ClayConnectForm;\nexport default ClayConnectForm;\nvar _c;\n$RefreshReg$(_c, \"ClayConnectForm\");","map":{"version":3,"names":["React","useState","useEffect","connectToClayApi","checkClayConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","ClayConnectForm","onSuccess","_s","apiKey","setApiKey","isConnecting","setIsConnecting","error","setError","connectionStatus","setConnectionStatus","connected","lastConnected","checkConnection","status","err","console","handleConnect","e","preventDefault","trim","result","success","Date","toISOString","formatDate","dateString","date","Intl","DateTimeFormat","year","month","day","hour","minute","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","disabled","href","rel","_c","$RefreshReg$"],"sources":["/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/components/ClayConnectForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connectToClayApi, checkClayConnection } from '../services/clayApi';\n\nconst ClayConnectForm = ({ onSuccess }) => {\n  const [apiKey, setApiKey] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState('');\n  const [connectionStatus, setConnectionStatus] = useState({ connected: false, lastConnected: null });\n  \n  // Check connection status on mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      try {\n        const status = await checkClayConnection();\n        setConnectionStatus(status);\n      } catch (err) {\n        console.error('Error checking connection:', err);\n        setConnectionStatus({ connected: false });\n      }\n    };\n    \n    checkConnection();\n  }, []);\n  \n  const handleConnect = async (e) => {\n    e.preventDefault();\n    \n    if (!apiKey.trim()) {\n      setError('API key is required');\n      return;\n    }\n    \n    try {\n      setIsConnecting(true);\n      setError('');\n      \n      const result = await connectToClayApi(apiKey);\n      \n      if (result.success) {\n        setConnectionStatus({ connected: true, lastConnected: new Date().toISOString() });\n        setApiKey('');\n        if (onSuccess) {\n          onSuccess();\n        }\n      } else {\n        setError(result.error || 'Failed to connect to Clay CRM');\n      }\n    } catch (err) {\n      console.error('Error connecting to Clay:', err);\n      setError('Failed to connect to Clay CRM. Please check your API key and try again.');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  \n  const formatDate = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n  \n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4 mb-4\">\n      <h3 className=\"text-lg font-bold mb-4\">Clay CRM Connection</h3>\n      \n      {connectionStatus.connected ? (\n        <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\">\n          <p className=\"font-medium\">🟢 Connected to Clay CRM</p>\n          {connectionStatus.lastConnected && (\n            <p className=\"text-sm\">Last connected: {formatDate(connectionStatus.lastConnected)}</p>\n          )}\n          <button\n            onClick={() => setConnectionStatus({ connected: false })}\n            className=\"mt-2 text-sm bg-white px-3 py-1 rounded border border-green-400 hover:bg-green-50\"\n          >\n            Reconnect\n          </button>\n        </div>\n      ) : (\n        <>\n          {error && (\n            <div className=\"bg-red-100 text-red-700 p-3 rounded mb-4 text-sm\">\n              {error}\n            </div>\n          )}\n          \n          <p className=\"text-sm text-gray-600 mb-4\">\n            Connect your Clay CRM account to track your networking progress and relationships.\n            You can find your API key in your Clay CRM account settings.\n          </p>\n          \n          <form onSubmit={handleConnect}>\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Clay CRM API Key\n              </label>\n              <input\n                type=\"password\"\n                value={apiKey}\n                onChange={(e) => setApiKey(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Enter your Clay CRM API key\"\n                disabled={isConnecting}\n              />\n            </div>\n            \n            <div className=\"flex justify-end\">\n              <button\n                type=\"submit\"\n                className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                disabled={isConnecting}\n              >\n                {isConnecting ? 'Connecting...' : 'Connect Clay CRM'}\n              </button>\n            </div>\n          </form>\n          \n          <p className=\"text-xs text-gray-500 mt-4\">\n            Don't have a Clay CRM account? <a href=\"https://clay.earth\" className=\"text-blue-600 hover:underline\" target=\"_blank\" rel=\"noreferrer\">Sign up here</a>\n          </p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ClayConnectForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}