{"ast":null,"code":"var _jsxFileName = \"/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/components/ImportTasksForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDashboard } from '../context/DashboardContext';\nimport { getTrackTasks, getMultiTrackTasks } from '../data/templates/tasks-template';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImportTasksForm = ({\n  onClose\n}) => {\n  _s();\n  const {\n    dashboardData,\n    refreshData\n  } = useDashboard();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [selectedTracks, setSelectedTracks] = useState(['devops']);\n  const [includeRecurring, setIncludeRecurring] = useState(true);\n  const [selectedTasks, setSelectedTasks] = useState([]);\n\n  // Track options\n  const trackOptions = [{\n    id: 'aws',\n    name: 'AWS/Cloud'\n  }, {\n    id: 'terraform',\n    name: 'Infrastructure as Code'\n  }, {\n    id: 'kubernetes',\n    name: 'Kubernetes'\n  }, {\n    id: 'cicd',\n    name: 'CI/CD Pipelines'\n  }, {\n    id: 'devops',\n    name: 'General DevOps'\n  }];\n\n  // Get tasks based on selected tracks\n  const getTasks = () => {\n    if (selectedTracks.length === 1) {\n      return getTrackTasks(selectedTracks[0], includeRecurring);\n    } else {\n      return getMultiTrackTasks(selectedTracks, includeRecurring);\n    }\n  };\n  const tasks = getTasks();\n\n  // Combine all tasks into a flat array for display and selection\n  const getAllTasksFlat = () => {\n    const oneTimeTasks = tasks.onetime || [];\n    const recurringTasks = tasks.recurring ? [...(tasks.recurring.daily || []).map(task => ({\n      ...task,\n      frequency: 'Daily'\n    })), ...(tasks.recurring.weekly || []).map(task => ({\n      ...task,\n      frequency: 'Weekly'\n    })), ...(tasks.recurring.monthly || []).map(task => ({\n      ...task,\n      frequency: 'Monthly'\n    }))] : [];\n    return [...oneTimeTasks, ...recurringTasks];\n  };\n  const allTasks = getAllTasksFlat();\n\n  // Toggle track selection\n  const toggleTrackSelection = trackId => {\n    if (selectedTracks.includes(trackId)) {\n      setSelectedTracks(selectedTracks.filter(id => id !== trackId));\n    } else {\n      setSelectedTracks([...selectedTracks, trackId]);\n    }\n\n    // Reset selected tasks when changing tracks\n    setSelectedTasks([]);\n  };\n\n  // Toggle task selection\n  const toggleTaskSelection = taskId => {\n    if (selectedTasks.includes(taskId)) {\n      setSelectedTasks(selectedTasks.filter(id => id !== taskId));\n    } else {\n      setSelectedTasks([...selectedTasks, taskId]);\n    }\n  };\n\n  // Get category color class\n  const getCategoryColor = category => {\n    switch (category) {\n      case 'aws':\n      case 'terraform':\n      case 'kubernetes':\n      case 'cicd':\n        return 'bg-blue-100 text-blue-800';\n      case 'learning':\n        return 'bg-green-100 text-green-800';\n      case 'project':\n        return 'bg-purple-100 text-purple-800';\n      case 'certification':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'networking':\n        return 'bg-pink-100 text-pink-800';\n      case 'skill':\n        return 'bg-indigo-100 text-indigo-800';\n      case 'career':\n        return 'bg-teal-100 text-teal-800';\n      case 'content':\n        return 'bg-orange-100 text-orange-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Get priority color class\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'high':\n        return 'bg-red-100 text-red-800';\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'low':\n        return 'bg-green-100 text-green-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Handle form submission\n  const handleImport = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      if (selectedTasks.length === 0) {\n        setError('Please select at least one task to import');\n        setLoading(false);\n        return;\n      }\n\n      // Get selected tasks from the full task list\n      const tasksToImport = allTasks.filter(task => selectedTasks.includes(task.id));\n\n      // Format tasks for import (remove frequency field if present)\n      const formattedTasks = tasksToImport.map(task => {\n        const {\n          frequency,\n          ...taskData\n        } = task;\n        return taskData;\n      });\n\n      // Combine with existing goals/tasks\n      const existingGoals = dashboardData.goals || [];\n\n      // Check for duplicate task content to avoid duplication\n      const existingContents = existingGoals.map(goal => goal.content);\n      const newTasks = formattedTasks.filter(task => !existingContents.includes(task.content));\n      if (newTasks.length === 0) {\n        setError('All selected tasks already exist in your dashboard');\n        setLoading(false);\n        return;\n      }\n\n      // Update goals in the backend\n      const updatedGoals = [...existingGoals, ...newTasks];\n      const response = await fetch('http://localhost:3001/api/data/goals', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedGoals)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update tasks');\n      }\n\n      // Also update dashboard overview metrics\n      const updatedOverview = {\n        ...dashboardData.overview,\n        totalGoals: updatedGoals.length,\n        completedGoals: updatedGoals.filter(goal => goal.completed).length\n      };\n      await fetch('http://localhost:3001/api/data/overview', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedOverview)\n      });\n      setSuccess(`Successfully imported ${newTasks.length} tasks`);\n\n      // Refresh data\n      await refreshData();\n\n      // Close form after success\n      if (onClose && newTasks.length > 0) {\n        setTimeout(() => onClose(), 1500);\n      }\n    } catch (err) {\n      console.error('Error importing tasks:', err);\n      setError('Failed to import tasks. Check console for details.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-4 mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-bold mb-4\",\n      children: \"Import Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 text-red-700 p-2 rounded mb-4 text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 text-green-700 p-2 rounded mb-4 text-sm\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-gray-700 mb-2\",\n        children: \"Select Tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-3 gap-2\",\n        children: trackOptions.map(track => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `flex items-center p-2 border rounded cursor-pointer ${selectedTracks.includes(track.id) ? 'border-blue-500 bg-blue-50' : 'border-gray-200'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedTracks.includes(track.id),\n            onChange: () => toggleTrackSelection(track.id),\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), track.name]\n        }, track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"flex items-center text-sm font-medium text-gray-700 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: includeRecurring,\n          onChange: () => setIncludeRecurring(!includeRecurring),\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), \"Include Recurring Tasks (Daily, Weekly, Monthly)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Select Tasks to Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: [selectedTasks.length, \" of \", allTasks.length, \" selected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-60 overflow-y-auto border border-gray-200 rounded p-2\",\n        children: allTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: allTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-2 border rounded cursor-pointer ${selectedTasks.includes(task.id) ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:bg-gray-50'}`,\n            onClick: () => toggleTaskSelection(task.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: task.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-end space-y-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 text-xs rounded ${getPriorityColor(task.priority)}`,\n                  children: task.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this), task.frequency && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded\",\n                  children: task.frequency\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 text-xs rounded ${getCategoryColor(task.category)}`,\n                children: task.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this), task.due && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500\",\n                children: [\"Due: \", typeof task.due === 'string' && task.due.includes('-') ? task.due : task.due]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"No tasks available for selected tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between text-sm text-gray-500 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedTasks.length === allTasks.length,\n            onChange: () => {\n              if (selectedTasks.length === allTasks.length) {\n                setSelectedTasks([]);\n              } else {\n                setSelectedTasks(allTasks.map(task => task.id));\n              }\n            },\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), \"Select All\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedTasks([]),\n          className: \"text-blue-600 hover:text-blue-800\",\n          disabled: selectedTasks.length === 0,\n          children: \"Clear Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end space-x-2\",\n      children: [onClose && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        className: \"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n        disabled: loading,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleImport,\n        className: \"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n        disabled: loading || selectedTasks.length === 0,\n        children: loading ? 'Importing...' : 'Import Selected Tasks'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(ImportTasksForm, \"yT/VYpjDp84+4HKY1wwaYetIlzs=\", false, function () {\n  return [useDashboard];\n});\n_c = ImportTasksForm;\nexport default ImportTasksForm;\nvar _c;\n$RefreshReg$(_c, \"ImportTasksForm\");","map":{"version":3,"names":["React","useState","useDashboard","getTrackTasks","getMultiTrackTasks","jsxDEV","_jsxDEV","ImportTasksForm","onClose","_s","dashboardData","refreshData","loading","setLoading","error","setError","success","setSuccess","selectedTracks","setSelectedTracks","includeRecurring","setIncludeRecurring","selectedTasks","setSelectedTasks","trackOptions","id","name","getTasks","length","tasks","getAllTasksFlat","oneTimeTasks","onetime","recurringTasks","recurring","daily","map","task","frequency","weekly","monthly","allTasks","toggleTrackSelection","trackId","includes","filter","toggleTaskSelection","taskId","getCategoryColor","category","getPriorityColor","priority","handleImport","tasksToImport","formattedTasks","taskData","existingGoals","goals","existingContents","goal","content","newTasks","updatedGoals","response","fetch","method","headers","body","JSON","stringify","ok","Error","updatedOverview","overview","totalGoals","completedGoals","completed","setTimeout","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","track","type","checked","onChange","onClick","due","disabled","_c","$RefreshReg$"],"sources":["/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/components/ImportTasksForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDashboard } from '../context/DashboardContext';\nimport { getTrackTasks, getMultiTrackTasks } from '../data/templates/tasks-template';\n\nconst ImportTasksForm = ({ onClose }) => {\n  const { dashboardData, refreshData } = useDashboard();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  \n  const [selectedTracks, setSelectedTracks] = useState(['devops']);\n  const [includeRecurring, setIncludeRecurring] = useState(true);\n  const [selectedTasks, setSelectedTasks] = useState([]);\n  \n  // Track options\n  const trackOptions = [\n    { id: 'aws', name: 'AWS/Cloud' },\n    { id: 'terraform', name: 'Infrastructure as Code' },\n    { id: 'kubernetes', name: 'Kubernetes' },\n    { id: 'cicd', name: 'CI/CD Pipelines' },\n    { id: 'devops', name: 'General DevOps' }\n  ];\n  \n  // Get tasks based on selected tracks\n  const getTasks = () => {\n    if (selectedTracks.length === 1) {\n      return getTrackTasks(selectedTracks[0], includeRecurring);\n    } else {\n      return getMultiTrackTasks(selectedTracks, includeRecurring);\n    }\n  };\n  \n  const tasks = getTasks();\n  \n  // Combine all tasks into a flat array for display and selection\n  const getAllTasksFlat = () => {\n    const oneTimeTasks = tasks.onetime || [];\n    const recurringTasks = tasks.recurring ? [\n      ...(tasks.recurring.daily || []).map(task => ({ ...task, frequency: 'Daily' })),\n      ...(tasks.recurring.weekly || []).map(task => ({ ...task, frequency: 'Weekly' })),\n      ...(tasks.recurring.monthly || []).map(task => ({ ...task, frequency: 'Monthly' }))\n    ] : [];\n    \n    return [...oneTimeTasks, ...recurringTasks];\n  };\n  \n  const allTasks = getAllTasksFlat();\n  \n  // Toggle track selection\n  const toggleTrackSelection = (trackId) => {\n    if (selectedTracks.includes(trackId)) {\n      setSelectedTracks(selectedTracks.filter(id => id !== trackId));\n    } else {\n      setSelectedTracks([...selectedTracks, trackId]);\n    }\n    \n    // Reset selected tasks when changing tracks\n    setSelectedTasks([]);\n  };\n  \n  // Toggle task selection\n  const toggleTaskSelection = (taskId) => {\n    if (selectedTasks.includes(taskId)) {\n      setSelectedTasks(selectedTasks.filter(id => id !== taskId));\n    } else {\n      setSelectedTasks([...selectedTasks, taskId]);\n    }\n  };\n  \n  // Get category color class\n  const getCategoryColor = (category) => {\n    switch (category) {\n      case 'aws':\n      case 'terraform':\n      case 'kubernetes':\n      case 'cicd':\n        return 'bg-blue-100 text-blue-800';\n      case 'learning':\n        return 'bg-green-100 text-green-800';\n      case 'project':\n        return 'bg-purple-100 text-purple-800';\n      case 'certification':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'networking':\n        return 'bg-pink-100 text-pink-800';\n      case 'skill':\n        return 'bg-indigo-100 text-indigo-800';\n      case 'career':\n        return 'bg-teal-100 text-teal-800';\n      case 'content':\n        return 'bg-orange-100 text-orange-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  \n  // Get priority color class\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'high':\n        return 'bg-red-100 text-red-800';\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'low':\n        return 'bg-green-100 text-green-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  \n  // Handle form submission\n  const handleImport = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      if (selectedTasks.length === 0) {\n        setError('Please select at least one task to import');\n        setLoading(false);\n        return;\n      }\n      \n      // Get selected tasks from the full task list\n      const tasksToImport = allTasks.filter(task => selectedTasks.includes(task.id));\n      \n      // Format tasks for import (remove frequency field if present)\n      const formattedTasks = tasksToImport.map(task => {\n        const { frequency, ...taskData } = task;\n        return taskData;\n      });\n      \n      // Combine with existing goals/tasks\n      const existingGoals = dashboardData.goals || [];\n      \n      // Check for duplicate task content to avoid duplication\n      const existingContents = existingGoals.map(goal => goal.content);\n      const newTasks = formattedTasks.filter(task => \n        !existingContents.includes(task.content)\n      );\n      \n      if (newTasks.length === 0) {\n        setError('All selected tasks already exist in your dashboard');\n        setLoading(false);\n        return;\n      }\n      \n      // Update goals in the backend\n      const updatedGoals = [...existingGoals, ...newTasks];\n      \n      const response = await fetch('http://localhost:3001/api/data/goals', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedGoals),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update tasks');\n      }\n      \n      // Also update dashboard overview metrics\n      const updatedOverview = {\n        ...dashboardData.overview,\n        totalGoals: updatedGoals.length,\n        completedGoals: updatedGoals.filter(goal => goal.completed).length\n      };\n      \n      await fetch('http://localhost:3001/api/data/overview', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedOverview),\n      });\n      \n      setSuccess(`Successfully imported ${newTasks.length} tasks`);\n      \n      // Refresh data\n      await refreshData();\n      \n      // Close form after success\n      if (onClose && newTasks.length > 0) {\n        setTimeout(() => onClose(), 1500);\n      }\n    } catch (err) {\n      console.error('Error importing tasks:', err);\n      setError('Failed to import tasks. Check console for details.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4 mb-6\">\n      <h3 className=\"text-lg font-bold mb-4\">Import Tasks</h3>\n      \n      {error && (\n        <div className=\"bg-red-100 text-red-700 p-2 rounded mb-4 text-sm\">\n          {error}\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"bg-green-100 text-green-700 p-2 rounded mb-4 text-sm\">\n          {success}\n        </div>\n      )}\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Select Tracks\n        </label>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n          {trackOptions.map(track => (\n            <label \n              key={track.id}\n              className={`flex items-center p-2 border rounded cursor-pointer ${\n                selectedTracks.includes(track.id) \n                  ? 'border-blue-500 bg-blue-50' \n                  : 'border-gray-200'\n              }`}\n            >\n              <input\n                type=\"checkbox\"\n                checked={selectedTracks.includes(track.id)}\n                onChange={() => toggleTrackSelection(track.id)}\n                className=\"mr-2\"\n              />\n              {track.name}\n            </label>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"mb-4\">\n        <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n          <input\n            type=\"checkbox\"\n            checked={includeRecurring}\n            onChange={() => setIncludeRecurring(!includeRecurring)}\n            className=\"mr-2\"\n          />\n          Include Recurring Tasks (Daily, Weekly, Monthly)\n        </label>\n      </div>\n      \n      <div className=\"mb-4\">\n        <div className=\"flex justify-between items-center mb-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Select Tasks to Import\n          </label>\n          <div className=\"text-xs text-gray-500\">\n            {selectedTasks.length} of {allTasks.length} selected\n          </div>\n        </div>\n        <div className=\"h-60 overflow-y-auto border border-gray-200 rounded p-2\">\n          {allTasks.length > 0 ? (\n            <div className=\"space-y-2\">\n              {allTasks.map(task => (\n                <div\n                  key={task.id}\n                  className={`p-2 border rounded cursor-pointer ${\n                    selectedTasks.includes(task.id)\n                      ? 'border-blue-500 bg-blue-50'\n                      : 'border-gray-200 hover:bg-gray-50'\n                  }`}\n                  onClick={() => toggleTaskSelection(task.id)}\n                >\n                  <div className=\"flex justify-between items-start\">\n                    <span className=\"font-medium\">{task.content}</span>\n                    <div className=\"flex flex-col items-end space-y-1\">\n                      <span className={`px-2 py-1 text-xs rounded ${getPriorityColor(task.priority)}`}>\n                        {task.priority}\n                      </span>\n                      {task.frequency && (\n                        <span className=\"px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded\">\n                          {task.frequency}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between items-center mt-2\">\n                    <span className={`px-2 py-1 text-xs rounded ${getCategoryColor(task.category)}`}>\n                      {task.category}\n                    </span>\n                    {task.due && (\n                      <span className=\"text-xs text-gray-500\">\n                        Due: {typeof task.due === 'string' && task.due.includes('-') \n                          ? task.due \n                          : task.due}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-full\">\n              <p className=\"text-gray-500\">No tasks available for selected tracks</p>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"flex justify-between text-sm text-gray-500 mb-4\">\n        <div>\n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={selectedTasks.length === allTasks.length}\n              onChange={() => {\n                if (selectedTasks.length === allTasks.length) {\n                  setSelectedTasks([]);\n                } else {\n                  setSelectedTasks(allTasks.map(task => task.id));\n                }\n              }}\n              className=\"mr-2\"\n            />\n            Select All\n          </label>\n        </div>\n        <div>\n          <button\n            onClick={() => setSelectedTasks([])}\n            className=\"text-blue-600 hover:text-blue-800\"\n            disabled={selectedTasks.length === 0}\n          >\n            Clear Selection\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"flex justify-end space-x-2\">\n        {onClose && (\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            disabled={loading}\n          >\n            Cancel\n          </button>\n        )}\n        \n        <button\n          onClick={handleImport}\n          className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          disabled={loading || selectedTasks.length === 0}\n        >\n          {loading ? 'Importing...' : 'Import Selected Tasks'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImportTasksForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}