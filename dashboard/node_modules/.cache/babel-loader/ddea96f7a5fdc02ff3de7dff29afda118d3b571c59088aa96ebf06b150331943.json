{"ast":null,"code":"import _objectSpread from\"/Users/jmh/repos_software/devops-career-dashboard/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * Authentication service for the dashboard\n * Provides functions for login, logout, and checking authentication status\n */// DEMO MODE FLAG\nconst DEMO_MODE=process.env.REACT_APP_DEMO_MODE==='true';// Determine API URL based on hostname\nlet apiBaseUrl=process.env.REACT_APP_API_URL||'http://localhost:3001';if(window.location.hostname==='devops-dashboard.joshuamichaelhall.com'){apiBaseUrl='https://devops-dashboard.joshuamichaelhall.com';}const API_URL=\"\".concat(apiBaseUrl,\"/api\");const TOKEN_KEY='dashboard_auth_token';const USER_KEY='dashboard_user';/**\n * Log in with username and password\n * @param {string} username - Username\n * @param {string} password - Password\n * @returns {Promise<Object>} Authentication result\n */export const login=async(username,password)=>{try{if(DEMO_MODE){console.log('Demo mode: simulating login with',username);// In demo mode, any credentials work\nconst demoUser={id:'demo-user',username:'demo',isAdmin:false};// Still simulate a delay to mimic network request\nawait new Promise(resolve=>setTimeout(resolve,500));// Store auth token and user info in localStorage\nlocalStorage.setItem(TOKEN_KEY,'demo-token-xyz123');localStorage.setItem(USER_KEY,JSON.stringify(demoUser));return{success:true,user:demoUser};}const response=await fetch(\"\".concat(API_URL,\"/auth/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Authentication failed');}const data=await response.json();// Store auth token and user info in localStorage\nlocalStorage.setItem(TOKEN_KEY,data.token);localStorage.setItem(USER_KEY,JSON.stringify({username:data.username,isAdmin:data.isAdmin}));return{success:true,user:data};}catch(error){console.error('Login error:',error);if(DEMO_MODE){// Always succeed in demo mode\nconst demoUser={id:'demo-user',username:'demo',isAdmin:false};localStorage.setItem(TOKEN_KEY,'demo-token-xyz123');localStorage.setItem(USER_KEY,JSON.stringify(demoUser));return{success:true,user:demoUser};}return{success:false,error:error.message};}};/**\n * Log out current user\n */export const logout=()=>{if(DEMO_MODE){console.log('Demo mode: simulating logout');// Redirect without actually clearing storage in demo mode\nwindow.location.href='/login';return{success:true};}localStorage.removeItem(TOKEN_KEY);localStorage.removeItem(USER_KEY);// Redirect to login page\nwindow.location.href='/login';return{success:true};};/**\n * Check if user is authenticated\n * @returns {boolean} Authentication status\n */export const isAuthenticated=()=>{if(DEMO_MODE){return true;// Always authenticated in demo mode\n}return!!getAuthToken();};/**\n * Get current user information\n * @returns {Object|null} User object or null if not authenticated\n */export const getCurrentUser=()=>{if(DEMO_MODE){// Always return demo user in demo mode\nreturn{id:'demo-user',username:'demo',isAdmin:false};}const userJson=localStorage.getItem(USER_KEY);return userJson?JSON.parse(userJson):null;};/**\n * Check if current user is admin\n * @returns {boolean} True if user is admin\n */export const isAdmin=()=>{if(DEMO_MODE){return false;// Demo user is not admin\n}const user=getCurrentUser();return user&&user.isAdmin;};/**\n * Get auth token for API requests\n * @returns {string|null} Auth token or null if not authenticated\n */export const getAuthToken=()=>{if(DEMO_MODE){return'demo-token-xyz123';// Demo token\n}return localStorage.getItem(TOKEN_KEY);};/**\n * Add auth token to fetch headers\n * @param {Object} headers - Headers object to add token to\n * @returns {Object} Headers with auth token added\n */export const addAuthHeader=function(){let headers=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const token=getAuthToken();if(token){return _objectSpread(_objectSpread({},headers),{},{'Authorization':\"Bearer \".concat(token)});}return headers;};/**\n * Create a protected fetch function that adds auth headers\n * @param {string} url - URL to fetch\n * @param {Object} options - Fetch options\n * @returns {Promise} Fetch result\n */export const authFetch=async function(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const headers=addAuthHeader(options.headers||{});// Special case for demo mode - prevent actual API calls for modifying data\nif(DEMO_MODE&&(options.method==='POST'||options.method==='PUT'||options.method==='PATCH'||options.method==='DELETE')){console.log('Demo mode: API call would be:',options.method,url);// For dashboard data fetch, return demo data\nif(url.includes('/dashboard/data')){return{ok:true,json:async()=>require('../data/demo-data.json')};}// For other endpoints, simulate success\nreturn{ok:true,json:async()=>({success:true,message:'This is a read-only demo. Data modifications are not saved.'})};}const response=await fetch(url,_objectSpread(_objectSpread({},options),{},{headers}));// If unauthorized in non-demo mode, log out\nif(response.status===401&&!DEMO_MODE){logout();throw new Error('Your session has expired. Please log in again.');}return response;};","map":{"version":3,"names":["DEMO_MODE","process","env","REACT_APP_DEMO_MODE","apiBaseUrl","REACT_APP_API_URL","window","location","hostname","API_URL","concat","TOKEN_KEY","USER_KEY","login","username","password","console","log","demoUser","id","isAdmin","Promise","resolve","setTimeout","localStorage","setItem","JSON","stringify","success","user","response","fetch","method","headers","body","ok","errorData","json","Error","error","data","token","message","logout","href","removeItem","isAuthenticated","getAuthToken","getCurrentUser","userJson","getItem","parse","addAuthHeader","arguments","length","undefined","_objectSpread","authFetch","url","options","includes","require","status"],"sources":["/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/services/authService.js"],"sourcesContent":["/**\n * Authentication service for the dashboard\n * Provides functions for login, logout, and checking authentication status\n */\n\n// DEMO MODE FLAG\nconst DEMO_MODE = process.env.REACT_APP_DEMO_MODE === 'true';\n// Determine API URL based on hostname\nlet apiBaseUrl = process.env.REACT_APP_API_URL || 'http://localhost:3001';\nif (window.location.hostname === 'devops-dashboard.joshuamichaelhall.com') {\n  apiBaseUrl = 'https://devops-dashboard.joshuamichaelhall.com';\n}\nconst API_URL = `${apiBaseUrl}/api`;\nconst TOKEN_KEY = 'dashboard_auth_token';\nconst USER_KEY = 'dashboard_user';\n\n/**\n * Log in with username and password\n * @param {string} username - Username\n * @param {string} password - Password\n * @returns {Promise<Object>} Authentication result\n */\nexport const login = async (username, password) => {\n  try {\n    if (DEMO_MODE) {\n      console.log('Demo mode: simulating login with', username);\n      \n      // In demo mode, any credentials work\n      const demoUser = {\n        id: 'demo-user',\n        username: 'demo',\n        isAdmin: false\n      };\n      \n      // Still simulate a delay to mimic network request\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Store auth token and user info in localStorage\n      localStorage.setItem(TOKEN_KEY, 'demo-token-xyz123');\n      localStorage.setItem(USER_KEY, JSON.stringify(demoUser));\n      \n      return { success: true, user: demoUser };\n    }\n    \n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Authentication failed');\n    }\n\n    const data = await response.json();\n    \n    // Store auth token and user info in localStorage\n    localStorage.setItem(TOKEN_KEY, data.token);\n    localStorage.setItem(USER_KEY, JSON.stringify({ \n      username: data.username,\n      isAdmin: data.isAdmin \n    }));\n    \n    return { success: true, user: data };\n  } catch (error) {\n    console.error('Login error:', error);\n    \n    if (DEMO_MODE) {\n      // Always succeed in demo mode\n      const demoUser = {\n        id: 'demo-user',\n        username: 'demo',\n        isAdmin: false\n      };\n      \n      localStorage.setItem(TOKEN_KEY, 'demo-token-xyz123');\n      localStorage.setItem(USER_KEY, JSON.stringify(demoUser));\n      \n      return { success: true, user: demoUser };\n    }\n    \n    return { success: false, error: error.message };\n  }\n};\n\n/**\n * Log out current user\n */\nexport const logout = () => {\n  if (DEMO_MODE) {\n    console.log('Demo mode: simulating logout');\n    // Redirect without actually clearing storage in demo mode\n    window.location.href = '/login';\n    return { success: true };\n  }\n  \n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(USER_KEY);\n  \n  // Redirect to login page\n  window.location.href = '/login';\n  return { success: true };\n};\n\n/**\n * Check if user is authenticated\n * @returns {boolean} Authentication status\n */\nexport const isAuthenticated = () => {\n  if (DEMO_MODE) {\n    return true; // Always authenticated in demo mode\n  }\n  \n  return !!getAuthToken();\n};\n\n/**\n * Get current user information\n * @returns {Object|null} User object or null if not authenticated\n */\nexport const getCurrentUser = () => {\n  if (DEMO_MODE) {\n    // Always return demo user in demo mode\n    return {\n      id: 'demo-user',\n      username: 'demo',\n      isAdmin: false\n    };\n  }\n  \n  const userJson = localStorage.getItem(USER_KEY);\n  return userJson ? JSON.parse(userJson) : null;\n};\n\n/**\n * Check if current user is admin\n * @returns {boolean} True if user is admin\n */\nexport const isAdmin = () => {\n  if (DEMO_MODE) {\n    return false; // Demo user is not admin\n  }\n  \n  const user = getCurrentUser();\n  return user && user.isAdmin;\n};\n\n/**\n * Get auth token for API requests\n * @returns {string|null} Auth token or null if not authenticated\n */\nexport const getAuthToken = () => {\n  if (DEMO_MODE) {\n    return 'demo-token-xyz123'; // Demo token\n  }\n  \n  return localStorage.getItem(TOKEN_KEY);\n};\n\n/**\n * Add auth token to fetch headers\n * @param {Object} headers - Headers object to add token to\n * @returns {Object} Headers with auth token added\n */\nexport const addAuthHeader = (headers = {}) => {\n  const token = getAuthToken();\n  \n  if (token) {\n    return {\n      ...headers,\n      'Authorization': `Bearer ${token}`\n    };\n  }\n  \n  return headers;\n};\n\n/**\n * Create a protected fetch function that adds auth headers\n * @param {string} url - URL to fetch\n * @param {Object} options - Fetch options\n * @returns {Promise} Fetch result\n */\nexport const authFetch = async (url, options = {}) => {\n  const headers = addAuthHeader(options.headers || {});\n  \n  // Special case for demo mode - prevent actual API calls for modifying data\n  if (DEMO_MODE && \n      (options.method === 'POST' || options.method === 'PUT' || options.method === 'PATCH' || options.method === 'DELETE')) {\n    console.log('Demo mode: API call would be:', options.method, url);\n    \n    // For dashboard data fetch, return demo data\n    if (url.includes('/dashboard/data')) {\n      return {\n        ok: true,\n        json: async () => require('../data/demo-data.json')\n      };\n    }\n    \n    // For other endpoints, simulate success\n    return {\n      ok: true,\n      json: async () => ({ \n        success: true, \n        message: 'This is a read-only demo. Data modifications are not saved.' \n      })\n    };\n  }\n  \n  const response = await fetch(url, {\n    ...options,\n    headers\n  });\n  \n  // If unauthorized in non-demo mode, log out\n  if (response.status === 401 && !DEMO_MODE) {\n    logout();\n    throw new Error('Your session has expired. Please log in again.');\n  }\n  \n  return response;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}