{"ast":null,"code":"import React,{useState}from'react';import{useDashboard}from'../context/DashboardContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CourseProgressForm=_ref=>{let{onClose}=_ref;const{dashboardData,refreshData}=useDashboard();const[courseName,setCourseName]=useState('');const[newCourseName,setNewCourseName]=useState('');const[progress,setProgress]=useState(0);const[isAddingCourse,setIsAddingCourse]=useState(false);const[isSubmitting,setIsSubmitting]=useState(false);const[error,setError]=useState('');// Current courses with their progress (hardcoded for now)\nconst courses=[{name:\"Adrian Cantrill's AWS SAA\",progress:10},{name:\"How Linux Works\",progress:15},{name:\"The Linux Command Line\",progress:5}];const handleSubmit=async e=>{e.preventDefault();const selectedCourse=isAddingCourse?newCourseName:courseName;if(!selectedCourse){setError('Course name is required');return;}try{setIsSubmitting(true);setError('');// For demonstration, we'll just simulate an API call\n// In a real implementation, you would add this to your backend API\n// Update learning data - normally you'd fetch this from API \n// and make updates through context functions similar to skills\n// For now, just update the UI temporarily\nalert(\"Updated progress for \".concat(selectedCourse,\" to \").concat(progress,\"%\"));// Call API (not implemented in this demo) \n// For a full implementation, add updateCourseProgress to context\n/*\n      await fetch('http://localhost:3001/api/courses/progress', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          courseName: selectedCourse,\n          progress: progress\n        }),\n      });\n      */// Refresh data\n// await refreshData();\n// Reset form\nsetCourseName('');setNewCourseName('');setProgress(0);if(onClose){onClose();}}catch(err){console.error('Error updating course progress:',err);setError('Failed to update course progress. Please try again.');}finally{setIsSubmitting(false);}};const handleCourseSelect=e=>{const selected=e.target.value;setCourseName(selected);// Set initial progress from existing course data\nif(selected){const course=courses.find(c=>c.name===selected);if(course){setProgress(course.progress);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-4 mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold mb-2\",children:\"Update Course Progress\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 text-red-700 p-2 rounded mb-4 text-sm\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center text-sm font-medium text-gray-700 mb-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isAddingCourse,onChange:e=>setIsAddingCourse(e.target.checked),className:\"mr-2\"}),\"Add New Course\"]}),isAddingCourse?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newCourseName,onChange:e=>setNewCourseName(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",placeholder:\"Enter new course name\",disabled:isSubmitting}):/*#__PURE__*/_jsxs(\"select\",{value:courseName,onChange:handleCourseSelect,className:\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",disabled:isSubmitting,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a course\"}),courses.map(course=>/*#__PURE__*/_jsx(\"option\",{value:course.name,children:course.name},course.name))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:[\"Progress: \",progress,\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"100\",value:progress,onChange:e=>setProgress(parseInt(e.target.value)),className:\"w-full\",disabled:isSubmitting}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"0%\"}),/*#__PURE__*/_jsx(\"span\",{children:\"50%\"}),/*#__PURE__*/_jsx(\"span\",{children:\"100%\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-2\",children:[onClose&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,className:\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",disabled:isSubmitting,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",disabled:isSubmitting,children:isSubmitting?'Updating...':'Update Progress'})]})]})]});};export default CourseProgressForm;","map":{"version":3,"names":["React","useState","useDashboard","jsx","_jsx","jsxs","_jsxs","CourseProgressForm","_ref","onClose","dashboardData","refreshData","courseName","setCourseName","newCourseName","setNewCourseName","progress","setProgress","isAddingCourse","setIsAddingCourse","isSubmitting","setIsSubmitting","error","setError","courses","name","handleSubmit","e","preventDefault","selectedCourse","alert","concat","err","console","handleCourseSelect","selected","target","value","course","find","c","className","children","onSubmit","type","checked","onChange","placeholder","disabled","map","min","max","parseInt","onClick"],"sources":["/Users/jmh/repos_software/devops-career-dashboard/dashboard/src/components/CourseProgressForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDashboard } from '../context/DashboardContext';\n\nconst CourseProgressForm = ({ onClose }) => {\n  const { dashboardData, refreshData } = useDashboard();\n  const [courseName, setCourseName] = useState('');\n  const [newCourseName, setNewCourseName] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [isAddingCourse, setIsAddingCourse] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  \n  // Current courses with their progress (hardcoded for now)\n  const courses = [\n    { name: \"Adrian Cantrill's AWS SAA\", progress: 10 },\n    { name: \"How Linux Works\", progress: 15 },\n    { name: \"The Linux Command Line\", progress: 5 }\n  ];\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    const selectedCourse = isAddingCourse ? newCourseName : courseName;\n    \n    if (!selectedCourse) {\n      setError('Course name is required');\n      return;\n    }\n    \n    try {\n      setIsSubmitting(true);\n      setError('');\n      \n      // For demonstration, we'll just simulate an API call\n      // In a real implementation, you would add this to your backend API\n      \n      // Update learning data - normally you'd fetch this from API \n      // and make updates through context functions similar to skills\n      \n      // For now, just update the UI temporarily\n      alert(`Updated progress for ${selectedCourse} to ${progress}%`);\n      \n      // Call API (not implemented in this demo) \n      // For a full implementation, add updateCourseProgress to context\n      /*\n      await fetch('http://localhost:3001/api/courses/progress', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          courseName: selectedCourse,\n          progress: progress\n        }),\n      });\n      */\n      \n      // Refresh data\n      // await refreshData();\n      \n      // Reset form\n      setCourseName('');\n      setNewCourseName('');\n      setProgress(0);\n      \n      if (onClose) {\n        onClose();\n      }\n    } catch (err) {\n      console.error('Error updating course progress:', err);\n      setError('Failed to update course progress. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  const handleCourseSelect = (e) => {\n    const selected = e.target.value;\n    setCourseName(selected);\n    \n    // Set initial progress from existing course data\n    if (selected) {\n      const course = courses.find(c => c.name === selected);\n      if (course) {\n        setProgress(course.progress);\n      }\n    }\n  };\n  \n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4 mb-4\">\n      <h3 className=\"text-lg font-bold mb-2\">Update Course Progress</h3>\n      \n      {error && (\n        <div className=\"bg-red-100 text-red-700 p-2 rounded mb-4 text-sm\">\n          {error}\n        </div>\n      )}\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-4\">\n          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-1\">\n            <input\n              type=\"checkbox\"\n              checked={isAddingCourse}\n              onChange={(e) => setIsAddingCourse(e.target.checked)}\n              className=\"mr-2\"\n            />\n            Add New Course\n          </label>\n          \n          {isAddingCourse ? (\n            <input\n              type=\"text\"\n              value={newCourseName}\n              onChange={(e) => setNewCourseName(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Enter new course name\"\n              disabled={isSubmitting}\n            />\n          ) : (\n            <select\n              value={courseName}\n              onChange={handleCourseSelect}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              disabled={isSubmitting}\n            >\n              <option value=\"\">Select a course</option>\n              {courses.map((course) => (\n                <option key={course.name} value={course.name}>\n                  {course.name}\n                </option>\n              ))}\n            </select>\n          )}\n        </div>\n        \n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Progress: {progress}%\n          </label>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={progress}\n            onChange={(e) => setProgress(parseInt(e.target.value))}\n            className=\"w-full\"\n            disabled={isSubmitting}\n          />\n          <div className=\"flex justify-between text-xs text-gray-500\">\n            <span>0%</span>\n            <span>50%</span>\n            <span>100%</span>\n          </div>\n        </div>\n        \n        <div className=\"flex justify-end space-x-2\">\n          {onClose && (\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              disabled={isSubmitting}\n            >\n              Cancel\n            </button>\n          )}\n          \n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Updating...' : 'Update Progress'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CourseProgressForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}